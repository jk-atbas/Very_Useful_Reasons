name: Release pipeline on main
on:
  push:
    branches:
      - main
  workflow_dispatch:
    inputs:
      create-release:
        description: Whether to create and upload a nuget package
        required: false
        default: true
        type: boolean

# Only needed when used together with actions/setup-dotnet
# env:
#   DOTNET_INSTALL_DIR: "~/dotnet"

jobs:
  build:
    runs-on: ubuntu-latest
    container: 
      image: mcr.microsoft.com/dotnet/sdk:9.0
    steps:
      - name: Checkout
        uses: actions/checkout@v5
        with:
          fetch-depth: 0
      # Not needed when container is used
      # - name: Setup .NET
      #   uses: actions/setup-dotnet@v5
      #   with:
      #     dotnet-version: "9.x"
      #     cache-dependency-path: ./src/lib/packages.lock.json
      #     cache: true
      - name: Build solution
        run: dotnet build ./*.slnx -c Release

  test:
    runs-on: ubuntu-latest
    container: 
      image: mcr.microsoft.com/dotnet/sdk:9.0
    steps:
      - name: Checkout
        uses: actions/checkout@v5
        with:
          fetch-depth: 0
      - name: Run tests
        run: dotnet test ./*.slnx

  release: 
    runs-on: ubuntu-latest
    container: 
      image: mcr.microsoft.com/dotnet/sdk:9.0
    permissions: 
      packages: write
      contents: write
    needs: [build, test]
    if: github.event_name == 'push' || inputs.create-release == true
    steps:
      - name: Checkout
        uses: actions/checkout@v5
        with:
            fetch-depth: 0
      - name: Use Nerdbank.GitVersioning
        uses: dotnet/nbgv@v0.4.2
        id: version
      - name: Build and Pack
        run: dotnet pack ./src/lib/*.csproj -c Release /p:PublicRelease=true
      - name: Give information
        run: |
          echo "Package version: ${{ steps.version.outputs.NuGetPackageVersion }}"
      - name: Add nuget package source
        run: |
          dotnet nuget add source \
            --username $GITHUB_REPOSITORY_OWNER \
            --password "${{ secrets.GITHUB_TOKEN }}" \
            --store-password-in-clear-text \
            --name github "https://nuget.pkg.github.com/jk-atbas/index.json"
      - name: Publish package to nuget registry
        run: dotnet nuget push ./src/lib/bin/Release/*.nupkg --api-key "${{ secrets.GITHUB_TOKEN }}" --source github --skip-duplicate
      - name: Create Release
        uses: ncipollo/release-action@v1.20.0
        with:
          artifacts: ./src/lib/bin/Release/*.nupkg
          skipIfReleaseExists: true
          name: v${{ steps.version.outputs.NuGetPackageVersion }}
          generateReleaseNotes: true
          replacesArtifacts: false
          tag: v${{ steps.version.outputs.NuGetPackageVersion }}